package main

import (
	"encoding/hex"
	"fmt"
)

func hexToUTF8(hexStr string) (string, error) {
	hexBytes, err := hex.DecodeString(hexStr)
	if err != nil {
		return "", err
	}

	utf8Str := string(hexBytes)
	return utf8Str, nil
}

func hexByteToString() {
	hexByte := []byte{
		0x7b, 0x20, 0x63, 0x72, 0x63, 0x3a, 0x20, 0x31, 0x36, 0x34, 0x35, 0x36,
		0x32, 0x38, 0x37, 0x33, 0x2c, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x3a, 0x20,
		0x31, 0x31, 0x34, 0x39, 0x2c, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x3a, 0x20,
		0x22, 0x61, 0x64, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x2e, 0x6a, 0x67, 0x22,
		0x2c, 0x20, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x3a, 0x20, 0x22, 0x61,
		0x64, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x2d, 0x66, 0x63, 0x31, 0x39, 0x33,
		0x32, 0x66, 0x36, 0x38, 0x30, 0x39, 0x65, 0x2e, 0x6a, 0x67, 0x22, 0x2c,
		0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x20, 0x22, 0x36,
		0x2e, 0x34, 0x31, 0x2e, 0x34, 0x22, 0x20, 0x7d, 0x2c, 0x0a, 0x7b, 0x20,
		0x63, 0x72, 0x63, 0x3a, 0x20, 0x33, 0x36, 0x37, 0x30, 0x36, 0x38, 0x39,
		0x34, 0x38, 0x38, 0x2c, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x3a, 0x20, 0x33,
		0x31, 0x31, 0x39, 0x2c, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x3a, 0x20, 0x22,
		0x64, 0x68, 0x63, 0x70, 0x2e, 0x6a, 0x67, 0x22, 0x2c, 0x20, 0x75, 0x6e,
		0x69, 0x71, 0x75, 0x65, 0x3a, 0x20, 0x22, 0x64, 0x68, 0x63, 0x70, 0x2d,
		0x37, 0x35, 0x66, 0x36, 0x36, 0x39, 0x39, 0x34, 0x62, 0x61, 0x34, 0x31,
		0x2e, 0x6a, 0x67, 0x22, 0x2c, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
		0x6e, 0x3a, 0x20, 0x22, 0x36, 0x2e, 0x34, 0x31, 0x2e, 0x34, 0x22, 0x20,
		0x7d, 0x2c, 0x0a, 0x7b, 0x20, 0x63, 0x72, 0x63, 0x3a, 0x20, 0x31, 0x31,
		0x38, 0x33, 0x37, 0x37, 0x39, 0x38, 0x33, 0x34, 0x2c, 0x20, 0x73, 0x69,
		0x7a, 0x65, 0x3a, 0x20, 0x31, 0x32, 0x34, 0x38, 0x39, 0x2c, 0x20, 0x6e,
		0x61, 0x6d, 0x65, 0x3a, 0x20, 0x22, 0x64, 0x75, 0x64, 0x65, 0x2e, 0x6a,
		0x67, 0x22, 0x2c, 0x20, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x3a, 0x20,
		0x22, 0x64, 0x75, 0x64, 0x65, 0x2d, 0x36, 0x35, 0x66, 0x31, 0x38, 0x66,
		0x61, 0x65, 0x64, 0x36, 0x34, 0x39, 0x2e, 0x6a, 0x67, 0x22, 0x2c, 0x20,
		0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x20, 0x22, 0x36, 0x2e,
		0x34, 0x31, 0x2e, 0x34, 0x22, 0x20, 0x7d, 0x2c, 0x0a, 0x7b, 0x20, 0x63,
		0x72, 0x63, 0x3a, 0x20, 0x34, 0x34, 0x34, 0x37, 0x38, 0x32, 0x37, 0x39,
		0x34, 0x2c, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x3a, 0x20, 0x34, 0x33, 0x33,
		0x2c, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x3a, 0x20, 0x22, 0x67, 0x70, 0x73,
		0x2e, 0x6a, 0x67, 0x22, 0x2c, 0x20, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65,
		0x3a, 0x20, 0x22, 0x67, 0x70, 0x73, 0x2d, 0x32, 0x31, 0x66, 0x61, 0x38,
		0x31, 0x34, 0x32, 0x33, 0x61, 0x35, 0x65, 0x2e, 0x6a, 0x67, 0x22, 0x2c,
		0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x20, 0x22, 0x36,
		0x2e, 0x34, 0x31, 0x2e, 0x34, 0x22, 0x20, 0x7d, 0x2c, 0x0a, 0x7b, 0x20,
		0x63, 0x72, 0x63, 0x3a, 0x20, 0x33, 0x35, 0x32, 0x39, 0x32, 0x33, 0x36,
		0x37, 0x37, 0x34, 0x2c, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x3a, 0x20, 0x34,
		0x31, 0x30, 0x39, 0x2c, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x3a, 0x20, 0x22,
		0x68, 0x6f, 0x74, 0x73, 0x70, 0x6f, 0x74, 0x2e, 0x6a, 0x67, 0x22, 0x2c,
		0x20, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x3a, 0x20, 0x22, 0x68, 0x6f,
		0x74, 0x73, 0x70, 0x6f, 0x74, 0x2d, 0x63, 0x63, 0x63, 0x33, 0x39, 0x61,
		0x32, 0x38, 0x31, 0x39, 0x62, 0x66, 0x2e, 0x6a, 0x67, 0x22, 0x2c, 0x20,
		0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x20, 0x22, 0x36, 0x2e,
		0x34, 0x31, 0x2e, 0x34, 0x22, 0x20, 0x7d, 0x2c, 0x0a, 0x7b, 0x20, 0x63,
		0x72, 0x63, 0x3a, 0x20, 0x31, 0x30, 0x39, 0x33, 0x39, 0x37, 0x30, 0x39,
		0x36, 0x35, 0x2c, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x3a, 0x20, 0x32, 0x32,
		0x34, 0x35, 0x31, 0x2c, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x3a, 0x20, 0x22,
		0x69, 0x63, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x6e, 0x67, 0x22, 0x2c, 0x20,
		0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x20, 0x22, 0x36, 0x2e,
		0x34, 0x31, 0x2e, 0x34, 0x22, 0x20, 0x7d, 0x2c, 0x0a, 0x7b, 0x20, 0x63,
		0x72, 0x63, 0x3a, 0x20, 0x31, 0x36, 0x33, 0x36, 0x33, 0x37, 0x31, 0x39,
		0x31, 0x36, 0x2c, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x3a, 0x20, 0x36, 0x34,
		0x33, 0x30, 0x2c, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x3a, 0x20, 0x22, 0x69,
		0x70, 0x76, 0x36, 0x2e, 0x6a, 0x67, 0x22, 0x2c, 0x20, 0x75, 0x6e, 0x69,
		0x71, 0x75, 0x65, 0x3a, 0x20, 0x22, 0x69, 0x70, 0x76, 0x36, 0x2d, 0x65,
		0x32, 0x62, 0x31, 0x30, 0x66, 0x31, 0x36, 0x66, 0x33, 0x36, 0x61, 0x2e,
		0x6a, 0x67, 0x22, 0x2c, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
		0x3a, 0x20, 0x22, 0x36, 0x2e, 0x34, 0x31, 0x2e, 0x34, 0x22, 0x20, 0x7d,
		0x2c, 0x0a, 0x7b, 0x20, 0x63, 0x72, 0x63, 0x3a, 0x20, 0x31, 0x36, 0x35,
		0x34, 0x36, 0x31, 0x35, 0x33, 0x32, 0x2c, 0x20, 0x73, 0x69, 0x7a, 0x65,
		0x3a, 0x20, 0x31, 0x34, 0x37, 0x33, 0x2c, 0x20, 0x6e, 0x61, 0x6d, 0x65,
		0x3a, 0x20, 0x22, 0x6b, 0x76, 0x6d, 0x2e, 0x6a, 0x67, 0x22, 0x2c, 0x20,
		0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x3a, 0x20, 0x22, 0x6b, 0x76, 0x6d,
		0x2d, 0x36, 0x65, 0x31, 0x30, 0x32, 0x39, 0x34, 0x37, 0x30, 0x61, 0x34,
		0x34, 0x2e, 0x6a, 0x67, 0x22, 0x2c, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69,
		0x6f, 0x6e, 0x3a, 0x20, 0x22, 0x36, 0x2e, 0x34, 0x31, 0x2e, 0x34, 0x22,
		0x20, 0x7d, 0x2c, 0x0a, 0x7b, 0x20, 0x63, 0x72, 0x63, 0x3a, 0x20, 0x36,
		0x36, 0x37, 0x38, 0x35, 0x37, 0x32, 0x30, 0x39, 0x2c, 0x20, 0x73, 0x69,
		0x7a, 0x65, 0x3a, 0x20, 0x34, 0x35, 0x35, 0x2c, 0x20, 0x6e, 0x61, 0x6d,
		0x65, 0x3a, 0x20, 0x22, 0x6c, 0x63, 0x64, 0x2e, 0x6a, 0x67, 0x22, 0x2c,
		0x20, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x3a, 0x20, 0x22, 0x6c, 0x63,
		0x64, 0x2d, 0x33, 0x30, 0x61, 0x37, 0x34, 0x30, 0x62, 0x66, 0x35, 0x33,
		0x37, 0x35, 0x2e, 0x6a, 0x67, 0x22, 0x2c, 0x20, 0x76, 0x65, 0x72, 0x73,
		0x69, 0x6f, 0x6e, 0x3a, 0x20, 0x22, 0x36, 0x2e, 0x34, 0x31, 0x2e, 0x34,
		0x22, 0x20, 0x7d, 0x2c, 0x0a, 0x7b, 0x20, 0x63, 0x72, 0x63, 0x3a, 0x20,
		0x31, 0x30, 0x32, 0x31, 0x35, 0x31, 0x39, 0x30, 0x33, 0x38, 0x2c, 0x20,
		0x73, 0x69, 0x7a, 0x65, 0x3a, 0x20, 0x33, 0x36, 0x32, 0x38, 0x2c, 0x20,
		0x6e, 0x61, 0x6d, 0x65, 0x3a, 0x20, 0x22, 0x6d, 0x70, 0x6c, 0x73, 0x2e,
		0x6a, 0x67, 0x22, 0x2c, 0x20, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x3a,
		0x20, 0x22, 0x6d, 0x70, 0x6c, 0x73, 0x2d, 0x36, 0x63, 0x63, 0x61, 0x36,
		0x36, 0x63, 0x33, 0x66, 0x31, 0x37, 0x30, 0x2e, 0x6a, 0x67, 0x22, 0x2c,
		0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x20, 0x22, 0x36,
		0x2e, 0x34, 0x31, 0x2e, 0x34, 0x22, 0x20, 0x7d, 0x2c, 0x0a, 0x7b, 0x20,
		0x63, 0x72, 0x63, 0x3a, 0x20, 0x33, 0x33, 0x32, 0x35, 0x34, 0x32, 0x37,
		0x32, 0x30, 0x2c, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x3a, 0x20, 0x34, 0x35,
		0x37, 0x2c, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x3a, 0x20, 0x22, 0x6e, 0x74,
		0x70, 0x2e, 0x6a, 0x67, 0x22, 0x2c, 0x20, 0x75, 0x6e, 0x69, 0x71, 0x75,
		0x65, 0x3a, 0x20, 0x22, 0x6e, 0x74, 0x70, 0x2d, 0x34, 0x31, 0x32, 0x65,
		0x38, 0x30, 0x65, 0x30, 0x36, 0x66, 0x38, 0x38, 0x2e, 0x6a, 0x67, 0x22,
		0x2c, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x20, 0x22,
		0x36, 0x2e, 0x34, 0x31, 0x2e, 0x34, 0x22, 0x20, 0x7d, 0x2c, 0x0a, 0x7b,
		0x20, 0x63, 0x72, 0x63, 0x3a, 0x20, 0x32, 0x38, 0x37, 0x30, 0x37, 0x36,
		0x32, 0x38, 0x36, 0x33, 0x2c, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x3a, 0x20,
		0x32, 0x33, 0x34, 0x32, 0x2c, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x3a, 0x20,
		0x22, 0x70, 0x69, 0x6d, 0x2e, 0x6a, 0x67, 0x22, 0x2c, 0x20, 0x75, 0x6e,
		0x69, 0x71, 0x75, 0x65, 0x3a, 0x20, 0x22, 0x70, 0x69, 0x6d, 0x2d, 0x66,
		0x61, 0x63, 0x34, 0x63, 0x65, 0x39, 0x65, 0x64, 0x64, 0x34, 0x34, 0x2e,
		0x6a, 0x67, 0x22, 0x2c, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
		0x3a, 0x20, 0x22, 0x36, 0x2e, 0x34, 0x31, 0x2e, 0x34, 0x22, 0x20, 0x7d,
		0x2c, 0x0a, 0x7b, 0x20, 0x63, 0x72, 0x63, 0x3a, 0x20, 0x32, 0x38, 0x34,
		0x39, 0x34, 0x36, 0x36, 0x35, 0x30, 0x39, 0x2c, 0x20, 0x73, 0x69, 0x7a,
		0x65, 0x3a, 0x20, 0x34, 0x34, 0x30, 0x38, 0x2c, 0x20, 0x6e, 0x61, 0x6d,
		0x65, 0x3a, 0x20, 0x22, 0x70, 0x70, 0x70, 0x2e, 0x6a, 0x67, 0x22, 0x2c,
		0x20, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x3a, 0x20, 0x22, 0x70, 0x70,
		0x70, 0x2d, 0x66, 0x36, 0x39, 0x39, 0x30, 0x62, 0x37, 0x37, 0x39, 0x36,
		0x38, 0x32, 0x2e, 0x6a, 0x67, 0x22, 0x2c, 0x20, 0x76, 0x65, 0x72, 0x73,
		0x69, 0x6f, 0x6e, 0x3a, 0x20, 0x22, 0x36, 0x2e, 0x34, 0x31, 0x2e, 0x34,
		0x22, 0x20, 0x7d, 0x2c, 0x0a, 0x7b, 0x20, 0x63, 0x72, 0x63, 0x3a, 0x20,
		0x32, 0x37, 0x34, 0x32, 0x39, 0x35, 0x31, 0x30, 0x35, 0x2c, 0x20, 0x73,
		0x69, 0x7a, 0x65, 0x3a, 0x20, 0x36, 0x33, 0x35, 0x33, 0x33, 0x2c, 0x20,
		0x6e, 0x61, 0x6d, 0x65, 0x3a, 0x20, 0x22, 0x72, 0x6f, 0x74, 0x65, 0x72,
		0x6f, 0x73, 0x2e, 0x6a, 0x67, 0x22, 0x2c, 0x20, 0x75, 0x6e, 0x69, 0x71,
		0x75, 0x65, 0x3a, 0x20, 0x22, 0x72, 0x6f, 0x74, 0x65, 0x72, 0x6f, 0x73,
		0x2d, 0x63, 0x38, 0x36, 0x37, 0x35, 0x33, 0x33, 0x33, 0x61, 0x33, 0x66,
		0x39, 0x2e, 0x6a, 0x67, 0x22, 0x2c, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69,
		0x6f, 0x6e, 0x3a, 0x20, 0x22, 0x36, 0x2e, 0x34, 0x31, 0x2e, 0x34, 0x22,
		0x20, 0x7d, 0x2c, 0x0a, 0x7b, 0x20, 0x63, 0x72, 0x63, 0x3a, 0x20, 0x32,
		0x39, 0x31, 0x31, 0x30, 0x39, 0x31, 0x38, 0x30, 0x36, 0x2c, 0x20, 0x73,
		0x69, 0x7a, 0x65, 0x3a, 0x20, 0x38, 0x32, 0x34, 0x30, 0x2c, 0x20, 0x6e,
		0x61, 0x6d, 0x65, 0x3a, 0x20, 0x22, 0x72, 0x6f, 0x74, 0x69, 0x6e, 0x67,
		0x34, 0x2e, 0x6a, 0x67, 0x22, 0x2c, 0x20, 0x75, 0x6e, 0x69, 0x71, 0x75,
		0x65, 0x3a, 0x20, 0x22, 0x72, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x34, 0x2d,
		0x32, 0x63, 0x61, 0x62, 0x65, 0x35, 0x39, 0x31, 0x38, 0x31, 0x65, 0x62,
		0x2e, 0x6a, 0x67, 0x22, 0x2c, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
		0x6e, 0x3a, 0x20, 0x22, 0x36, 0x2e, 0x34, 0x31, 0x2e, 0x34, 0x22, 0x20,
		0x7d, 0x2c, 0x0a, 0x7b, 0x20, 0x63, 0x72, 0x63, 0x3a, 0x20, 0x32, 0x37,
		0x38, 0x34, 0x38, 0x37, 0x30, 0x38, 0x33, 0x37, 0x2c, 0x20, 0x73, 0x69,
		0x7a, 0x65, 0x3a, 0x20, 0x33, 0x34, 0x38, 0x33, 0x2c, 0x20, 0x6e, 0x61,
		0x6d, 0x65, 0x3a, 0x20, 0x22, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2e,
		0x6a, 0x67, 0x22, 0x2c, 0x20, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x3a,
		0x20, 0x22, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x2d, 0x35, 0x38, 0x39,
		0x66, 0x32, 0x65, 0x38, 0x31, 0x34, 0x66, 0x35, 0x34, 0x2e, 0x6a, 0x67,
		0x22, 0x2c, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x20,
		0x22, 0x36, 0x2e, 0x34, 0x31, 0x2e, 0x34, 0x22, 0x20, 0x7d, 0x2c, 0x0a,
		0x7b, 0x20, 0x63, 0x72, 0x63, 0x3a, 0x20, 0x31, 0x36, 0x31, 0x37, 0x39,
		0x33, 0x38, 0x32, 0x33, 0x36, 0x2c, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x3a,
		0x20, 0x37, 0x36, 0x35, 0x2c, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x3a, 0x20,
		0x22, 0x75, 0x70, 0x73, 0x2e, 0x6a, 0x67, 0x22, 0x2c, 0x20, 0x75, 0x6e,
		0x69, 0x71, 0x75, 0x65, 0x3a, 0x20, 0x22, 0x75, 0x70, 0x73, 0x2d, 0x65,
		0x32, 0x39, 0x36, 0x38, 0x33, 0x63, 0x38, 0x64, 0x34, 0x39, 0x32, 0x2e,
		0x6a, 0x67, 0x22, 0x2c, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
		0x3a, 0x20, 0x22, 0x36, 0x2e, 0x34, 0x31, 0x2e, 0x34, 0x22, 0x20, 0x7d,
		0x2c, 0x0a, 0x7b, 0x20, 0x63, 0x72, 0x63, 0x3a, 0x20, 0x32, 0x36, 0x38,
		0x32, 0x39, 0x37, 0x39, 0x36, 0x33, 0x34, 0x2c, 0x20, 0x73, 0x69, 0x7a,
		0x65, 0x3a, 0x20, 0x31, 0x36, 0x31, 0x37, 0x38, 0x2c, 0x20, 0x6e, 0x61,
		0x6d, 0x65, 0x3a, 0x20, 0x22, 0x77, 0x6c, 0x61, 0x6e, 0x36, 0x2e, 0x6a,
		0x67, 0x22, 0x2c, 0x20, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x3a, 0x20,
		0x22, 0x77, 0x6c, 0x61, 0x6e, 0x36, 0x2d, 0x38, 0x37, 0x65, 0x64, 0x32,
		0x61, 0x63, 0x66, 0x36, 0x33, 0x65, 0x65, 0x2e, 0x6a, 0x67, 0x22, 0x2c,
		0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x20, 0x22, 0x36,
		0x2e, 0x34, 0x31, 0x2e, 0x34, 0x22, 0x20, 0x7d, 0x2c, 0x0a,
	}

	hexstring := hex.EncodeToString(hexByte)
	utf8Str, err := hexToUTF8(hexstring)
	if err != nil {
		fmt.Println("Error:", err)
		return
	}

	fmt.Println("UTF-8 String:", utf8Str)
}

func StringToHexByte() {
	stringValue := "616476746f6f6c2e646c6c3a362e34392e3135646863702e646c6c3a362e34392e3135647564652e646c6c3a362e34392e3135686f7473706f742e646c6c3a362e34392e31356d706c732e646c6c3a362e34392e31357070702e646c6c3a362e34392e3135726f7465726f732e646c6c3a362e34392e3135726f74696e67342e646c6c3a362e34392e31357365637572652e646c6c3a362e34392e313573797374656d2e646c6c3a362e34392e31357570732e646c6c3a362e34392e3135776c616e362e646c6c3a362e34392e3135"
	byteValue, _ := hex.DecodeString(stringValue)
	fmt.Println(byteValue)
	for i, v := range byteValue {
		fmt.Printf("0x%2x,", v)
		if i%12 == 0 && i != 0 {
			fmt.Print("\n")
		}
	}
}

func main() {
	StringToHexByte()
	//hexByteToString()
}
